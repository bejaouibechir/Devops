#create secret content
echo -n 'postgres' > ./username.txt
echo -n 'postgres' > ./password.txt

#create them with symbols 
kubectl create secret generic db-credentials --from-file=user=./username.txt --from-file=pass=./password.txt

#get the secrets
kubectl get secrets

#Get the secret credentials base64 encoded
kubectl get secret db-credentials -o jsonpath='{.data}'

#Decode the secrets
echo 'cG9zdGdyZXM=' | base64 --decode
  

#Delete the secret
kubectl delete secret db-credentials

#Edit the secrets in Yaml format
kubectl edit secrets mysecret


#Second method to create secrets
#create secrets via yaml file 

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: kubernetes.io/basic-auth
stringData:
  user: usr1234
  password: test1234

kubectl create|apply -f secrets.yaml



